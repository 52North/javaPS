<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2016-2020 52°North Initiative for Geospatial Open Source
    Software GmbH

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.n52.wps</groupId>
        <artifactId>javaPS</artifactId>
        <version>1.5.0-SNAPSHOT</version>
    </parent>
	
    <artifactId>webapp</artifactId>
    <packaging>war</packaging>

    <name>52°North javaPS Webapp</name>
    
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>service</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.n52.arctic-sea</groupId>
            <artifactId>faroe-json</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>engine</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>kvp</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>xml</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>net.sourceforge.pjl-comp-filter</groupId>
            <artifactId>pjl-comp-filter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
        </dependency>
        <dependency>
            <groupId>se.jiderhamn</groupId>
            <artifactId>classloader-leak-prevention</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>fluent-hc</artifactId>
            <!-- there can always the case be that another lib is having a dependency on this.
            defining it as test scope  here, results in an exclusion from the WEB-INF/lib
            and might result in runtime issues -->
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
		<dependency>
            <groupId>org.n52.wps</groupId>
			<artifactId>52n-xml-wps-v20</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.n52.sensorweb</groupId>
			<artifactId>52n-xml-ows-v20</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
            <!-- there can always the case be that another lib is having a dependency on this.
            defining it as test scope  here, results in an exclusion from the WEB-INF/lib
            and might result in runtime issues -->
            <scope>runtime</scope>
		</dependency>
		<dependency>
            <groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>
        <dependency>
            <groupId>org.xmlmatchers</groupId>
            <artifactId>xml-matchers</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>net.sf.saxon</groupId>
                    <artifactId>Saxon-HE</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
         <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <!-- there can always the case be that another lib is having a dependency on this.
            defining it as test scope  here, results in an exclusion from the WEB-INF/lib
            and might result in runtime issues -->
            <scope>runtime</scope>
        </dependency>
         <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
         <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <scope>runtime</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>${project.parent.artifactId}-${project.artifactId}-${project.version}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
            <resource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/web.xml</include>
                                <include>**/index.html</include>
                            </includes>
                        </resource>
                    </webResources>
                    <packagingExcludes>WEB-INF/lib/javaps-iohandler-${version.iohandler}.jar, 
                    WEB-INF/lib/javaps-test-processes-${version.test.processes}.jar, 
                    WEB-INF/lib/xmlbeans-${version.xmlbeans}.jar</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.26.v20200117</version>
                <configuration>
                    <webApp>
                        <contextPath>/javaps</contextPath>
                    </webApp>
                    <dumpOnStart>false</dumpOnStart>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9</version>
						<executions>
							<execution>
								<id>reserve-network-port</id>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<phase>pre-integration-test</phase>
								<configuration>
									<portNames>
										<portName>jetty.http.port</portName>
										<portName>jetty.http.stop.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.jetty</groupId>
						<artifactId>jetty-maven-plugin</artifactId>
						<version>9.4.25.v20191220</version>
						<configuration>
							<httpConnector>
								<port>${jetty.http.port}</port>
								<idleTimeout>60000</idleTimeout>
							</httpConnector>
							<stopPort>${jetty.http.stop.port}</stopPort>
							<stopKey>STOP</stopKey>
							<stopWait>5</stopWait>
							<webApp>
								<contextPath>/javaps</contextPath>
							</webApp>
							<systemProperties>
								<systemProperty>
									<name>catalina.base</name>
									<value>${project.build.directory}</value>
								</systemProperty>
								<systemProperty>
									<name>catalina.home</name>
									<value>${project.build.directory}</value>
								</systemProperty>
							</systemProperties>
						</configuration>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy-war</goal>
								</goals>
								<configuration>
									<war>${project.build.directory}/${project.build.finalName}</war>
									<scanIntervalSeconds>0</scanIntervalSeconds>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.17</version>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>

									<argLine>-Xmx1024m</argLine>
									<summaryFile>target/failsafe-reports/failsafe-summary.xml</summaryFile>
									<systemPropertyVariables>
										<com.sun.media.jai.disableMediaLib>true</com.sun.media.jai.disableMediaLib>
										<test.host>127.0.0.1</test.host>
										<test.port>${jetty.http.port}</test.port>
										<test.context>/javaps</test.context>
										<catalina.home>${project.build.directory}</catalina.home>
										<catalina.base>${project.build.directory}</catalina.base>
									</systemPropertyVariables>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
		        <dependency>
			       <groupId>org.n52.geoprocessing</groupId>
			       <artifactId>javaps-test-processes</artifactId>
			       <version>${version.test.processes}</version>
			       <scope>runtime</scope>
		        </dependency>
		        <dependency>
			       <groupId>org.apache.xmlbeans</groupId>
			       <artifactId>xmlbeans</artifactId>
			       <version>${version.xmlbeans}</version>
			       <scope>runtime</scope>
		         </dependency>
			</dependencies>
		</profile>
    </profiles>    
</project>
